name: CICD

on:
  workflow_dispatch:
    inputs:
      gcr_target:
        description: "push to gcr for daily run (leave empty to skip)"
        type: choice
        required: false
        default: ""
        options:
          - ""
          - "tiflash"
          - "tiflash-compute"

jobs:
  build-arm64:
    name: Build ARM64 Image
    runs-on: arm64
    timeout-minutes: 180
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.GIT_ACTION_BOT }}
          fetch-depth: 0
      - name: Build and Push Images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: release-centos7-llvm/dockerfiles/Dockerfile-tiflash-cse-multiarch
          platforms: "linux/arm64"
          push: true
          tags: hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-arm64
      - name: Build and Push Images DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: release-centos7-llvm/dockerfiles/Dockerfile-tiflash-cse-multiarch
          platforms: "linux/arm64"
          push: true
          tags: xexplorersun/tiflash:cse-${{ github.sha }}-arm64
  build-amd64:
    name: Build AMD64 Image
    runs-on: amd64
    timeout-minutes: 180
    outputs:
      image: tiflash-cse:${{ github.sha }}-amd64
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.GIT_ACTION_BOT }}
          fetch-depth: 0
      - name: Build and Push Images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: release-centos7-llvm/dockerfiles/Dockerfile-tiflash-cse-multiarch
          platforms: "linux/amd64"
          push: true
          tags: hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-amd64
      - name: Build and Push Images DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: release-centos7-llvm/dockerfiles/Dockerfile-tiflash-cse-multiarch
          platforms: "linux/amd64"
          push: true
          tags: xexplorersun/tiflash:cse-${{ github.sha }}-amd64
  multi-arch:
    name: Create Multi-Architecture Image
    runs-on: amd64
    needs: ["build-arm64", "build-amd64"]
    steps:
      - name: create-manifest
        run: |
          docker manifest create xexplorersun/tiflash:cse-${{ github.sha }} \
          --amend xexplorersun/tiflash:cse-${{ github.sha }}-amd64 \
          --amend xexplorersun/tiflash:cse-${{ github.sha }}-arm64
      - name: push-manifest
        run: |
          docker manifest push xexplorersun/tiflash:cse-${{ github.sha }}
      - name: create-manifest harbor
        run: |
          docker manifest create hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }} \
          --amend hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-amd64 \
          --amend hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}-arm64
      - name: push-manifest harbor
        run: |
          docker manifest push hub.pingcap.net/sunxiaoguang/serverless/tiflash:${{ github.sha }}

  sync-image-tiflash:
    name: Sync image to GCR tiflash
    runs-on: amd64
    needs: ["multi-arch"]
    if: ${{ inputs.gcr_target == 'tiflash' }}
    steps:
      - name: remove-old-manifest
        run: |
          docker manifest rm xexplorersun/tiflash:v6.6.0
      - name: create-new-manifest
        run: |
          docker manifest create xexplorersun/tiflash:v6.6.0 \
          xexplorersun/tiflash:cse-${{ github.sha }}-amd64 \
          xexplorersun/tiflash:cse-${{ github.sha }}-arm64
      - name: push-new-manifest
        run: |
          docker manifest push xexplorersun/tiflash:v6.6.0

  sync-image-tiflash-compute:
    name: Sync image to GCR tiflash-compute
    runs-on: amd64
    needs: ["multi-arch"]
    if: ${{ inputs.gcr_target == 'tiflash-compute' }}
    steps:
      - name: remove-old-manifest
        run: |
          docker manifest rm xexplorersun/tiflash-compute:v6.6.0
      - name: create-new-manifest
        run: |
          docker manifest create xexplorersun/tiflash-compute:v6.6.0 \
          xexplorersun/tiflash:cse-${{ github.sha }}-amd64 \
          xexplorersun/tiflash:cse-${{ github.sha }}-arm64
      - name: push-manifest
        run: |
          docker manifest push xexplorersun/tiflash-compute:v6.6.0
